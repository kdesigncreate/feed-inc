user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Upstream for Laravel API backend
    upstream laravel_backend {
        server laravel:9000;
        keepalive 32;
    }

    # Upstream for Next.js frontend
    upstream nextjs_frontend {
        server nextjs:3000;
        keepalive 32;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;

    # HTTP to HTTPS redirect with ACME challenge support
    server {
        listen 80;
        listen [::]:80;
        server_name feed-inc.com www.feed-inc.com;
        
        # ACME Challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri $uri/ =404;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server configuration
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name feed-inc.com www.feed-inc.com;

        # SSL Configuration - Let's Encrypt certificates
        ssl_certificate /etc/letsencrypt/live/feed-inc.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/feed-inc.com/privkey.pem;
        
        # モダンなTLS設定
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;  # TLS 1.3では不要
        
        # セキュアな暗号スイート（Mozilla Modern configuration）
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        
        # SSL最適化
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP Stapling for Let's Encrypt certificates
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/feed-inc.com/chain.pem;

        # Security Headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;

        # Note: CSP はフロントエンドの Next.js で制御。API レスポンスは厳格CSP を middleware/アプリ側で付与

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Logs
        access_log /var/log/nginx/feed-inc.access.log;
        error_log /var/log/nginx/feed-inc.error.log;

        # Sanctum Routes - Proxy to Laravel backend
        location /sanctum/ {
            limit_req zone=api burst=20 nodelay;
            
            fastcgi_pass laravel_backend;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/public/index.php;
            include fastcgi_params;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param REQUEST_URI $request_uri;
            fastcgi_param DOCUMENT_ROOT /var/www/html/public;
            
            # CORS headers for Sanctum
            add_header 'Access-Control-Allow-Origin' 'https://www.feed-inc.com' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRF-TOKEN,X-XSRF-TOKEN' always;
        }

        # API Routes - Proxy to Laravel backend
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            fastcgi_pass laravel_backend;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/public/index.php;
            include fastcgi_params;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param REQUEST_URI $request_uri;
            fastcgi_param DOCUMENT_ROOT /var/www/html/public;
            fastcgi_param QUERY_STRING $query_string;
            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param CONTENT_TYPE $content_type;
            fastcgi_param CONTENT_LENGTH $content_length;
            fastcgi_param HTTPS $https if_not_empty;
            
            # CORS headers for API
            add_header 'Access-Control-Allow-Origin' 'https://www.feed-inc.com' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRF-TOKEN,X-XSRF-TOKEN' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://www.feed-inc.com';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRF-TOKEN,X-XSRF-TOKEN';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # PHP files - Route to Laravel backend (placed before catch-all)
        location ~ \.php$ {
            fastcgi_pass laravel_backend;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/public$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param REQUEST_URI $request_uri;
            fastcgi_param DOCUMENT_ROOT /var/www/html/public;
            fastcgi_param QUERY_STRING $query_string;
            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param CONTENT_TYPE $content_type;
            fastcgi_param CONTENT_LENGTH $content_length;
            fastcgi_param HTTPS $https if_not_empty;
            
            # CORS headers for PHP files
            add_header 'Access-Control-Allow-Origin' 'https://www.feed-inc.com' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRF-TOKEN,X-XSRF-TOKEN' always;
        }

        # Next.js static assets with proper MIME types
        location /_next/static/ {
            proxy_pass http://nextjs_frontend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static assets for 1 year
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Ensure proper MIME types
            location ~* \.css$ {
                proxy_pass http://nextjs_frontend;
                add_header Content-Type text/css;
            }
            
            location ~* \.js$ {
                proxy_pass http://nextjs_frontend;
                add_header Content-Type application/javascript;
            }
        }


        # All other routes - Proxy to Next.js frontend
        location / {
            limit_req zone=web burst=50 nodelay;
            
            proxy_pass http://nextjs_frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            # Frontend 側の CSP を優先
            proxy_hide_header Content-Security-Policy;
        }

        # Security: Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}